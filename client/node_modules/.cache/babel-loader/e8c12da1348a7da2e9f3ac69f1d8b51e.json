{"ast":null,"code":"var _jsxFileName = \"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/containers/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\"; // component imports\n\nimport Layout from \"../components/shared/Layout/Layout\";\nimport Boards from \"../screens/Boards/Boards\";\nimport BoardCreate from \"../screens/BoardCreate/BoardCreate\";\nimport BoardEdit from \"../screens/BoardEdit/BoardEdit\";\nimport BoardDetail from \"../screens/BoardDetail/BoardDetail\";\nimport PostDetail from \"../screens/PostDetail/PostDetail\";\nimport PostCreate from \"../screens/PostCreate/PostCreate\"; // services imports\n\nimport { destroyPost } from \"../services/posts\";\nimport { getAllBoards, addBoard, putBoard, destroyBoard } from \"../services/boards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainContainer(props) {\n  _s();\n\n  const [boards, setBoards] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const history = useHistory();\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchBoards = async () => {\n      const boardData = await getAllBoards();\n      setBoards(boardData);\n    };\n\n    fetchBoards();\n  }, []);\n\n  const handleBoardCreate = async boardData => {\n    const newBoard = await addBoard(boardData);\n    setBoards(prevState => [...prevState, newBoard]);\n    history.push(\"/boards\");\n  };\n\n  const handleBoardUpdate = async (id, boardData) => {\n    const updatedBoard = await putBoard(id, boardData);\n    setBoards(prevState => prevState.map(board => {\n      return board.id === Number(id) ? updatedBoard : board;\n    }));\n    history.push(\"/boards\");\n  };\n\n  const handleBoardDelete = async id => {\n    await destroyBoard(id);\n    setBoards(prevState => prevState.filter(board => board.id !== id));\n    history.push(\"/boards\");\n  }; // POST API CALLS\n\n\n  const handlePostCreate = async (boardId, id, postData) => {\n    const newBoard = await addBoard(postData);\n    setBoards(prevState => [...prevState, newBoard]);\n    history.push(`/boards/${boardId}/posts/${id}`);\n  };\n\n  const handlePostDelete = async (boardId, id) => {\n    await destroyPost(boardId, id);\n    setPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push(`/boards/${boardId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      currentUser: currentUser,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boards/:id/posts/create\",\n          children: /*#__PURE__*/_jsxDEV(PostCreate, {\n            handlePostCreate: handlePostCreate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boards/:id/posts/:id\",\n          children: /*#__PURE__*/_jsxDEV(PostDetail, {\n            boards: boards // posts={posts}\n            ,\n            handlePostDelete: handlePostDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boards/create\",\n          children: /*#__PURE__*/_jsxDEV(BoardCreate, {\n            handleBoardCreate: handleBoardCreate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boards/:id/edit\",\n          children: /*#__PURE__*/_jsxDEV(BoardEdit, {\n            boards: boards,\n            handleBoardUpdate: handleBoardUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boards/:id\",\n          children: /*#__PURE__*/_jsxDEV(BoardDetail, {\n            handleBoardDelete: handleBoardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boards\",\n          children: /*#__PURE__*/_jsxDEV(Boards, {\n            boards: boards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"APSmC4LrPn6mdWQcb9rHTIuACoI=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/containers/MainContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","Layout","Boards","BoardCreate","BoardEdit","BoardDetail","PostDetail","PostCreate","destroyPost","getAllBoards","addBoard","putBoard","destroyBoard","MainContainer","props","boards","setBoards","posts","setPosts","history","currentUser","fetchBoards","boardData","handleBoardCreate","newBoard","prevState","push","handleBoardUpdate","id","updatedBoard","map","board","Number","handleBoardDelete","filter","handlePostCreate","boardId","postData","handlePostDelete","post"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\n// component imports\nimport Layout from \"../components/shared/Layout/Layout\";\nimport Boards from \"../screens/Boards/Boards\";\nimport BoardCreate from \"../screens/BoardCreate/BoardCreate\";\nimport BoardEdit from \"../screens/BoardEdit/BoardEdit\";\nimport BoardDetail from \"../screens/BoardDetail/BoardDetail\";\nimport PostDetail from \"../screens/PostDetail/PostDetail\";\nimport PostCreate from \"../screens/PostCreate/PostCreate\";\n\n// services imports\nimport { destroyPost } from \"../services/posts\";\n\nimport {\n  getAllBoards,\n  addBoard,\n  putBoard,\n  destroyBoard,\n} from \"../services/boards\";\n\nexport default function MainContainer(props) {\n  const [boards, setBoards] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      const boardData = await getAllBoards();\n      setBoards(boardData);\n    };\n    fetchBoards();\n  }, []);\n\n  const handleBoardCreate = async (boardData) => {\n    const newBoard = await addBoard(boardData);\n    setBoards((prevState) => [...prevState, newBoard]);\n    history.push(\"/boards\");\n  };\n\n  const handleBoardUpdate = async (id, boardData) => {\n    const updatedBoard = await putBoard(id, boardData);\n    setBoards((prevState) =>\n      prevState.map((board) => {\n        return board.id === Number(id) ? updatedBoard : board;\n      })\n    );\n    history.push(\"/boards\");\n  };\n\n  const handleBoardDelete = async (id) => {\n    await destroyBoard(id);\n    setBoards((prevState) => prevState.filter((board) => board.id !== id));\n    history.push(\"/boards\");\n  };\n\n  // POST API CALLS\n  const handlePostCreate = async (boardId, id, postData) => {\n    const newBoard = await addBoard(postData);\n    setBoards((prevState) => [...prevState, newBoard]);\n    history.push(`/boards/${boardId}/posts/${id}`);\n  };\n\n  const handlePostDelete = async (boardId, id) => {\n    await destroyPost(boardId, id);\n    setPosts((prevState) => prevState.filter((post) => post.id !== id));\n    history.push(`/boards/${boardId}`);\n  };\n\n  return (\n    <div>\n      <Layout currentUser={currentUser}>\n        <Switch>\n          <Route path=\"/boards/:id/posts/create\">\n            <PostCreate handlePostCreate={handlePostCreate} />\n          </Route>\n          <Route path=\"/boards/:id/posts/:id\">\n            <PostDetail\n              boards={boards}\n              // posts={posts}\n              handlePostDelete={handlePostDelete}\n            />\n          </Route>\n\n          <Route path=\"/boards/create\">\n            <BoardCreate handleBoardCreate={handleBoardCreate} />\n          </Route>\n          <Route path=\"/boards/:id/edit\">\n            <BoardEdit boards={boards} handleBoardUpdate={handleBoardUpdate} />\n          </Route>\n          <Route path=\"/boards/:id\">\n            <BoardDetail handleBoardDelete={handleBoardDelete} />\n          </Route>\n          <Route path=\"/boards\">\n            <Boards boards={boards} />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}