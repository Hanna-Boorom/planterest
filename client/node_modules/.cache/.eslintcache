[{"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/index.js":"1","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/App.js":"2","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/auth.js":"3","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/api-config.js":"4","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Login/Login.jsx":"5","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Landing/Landing.jsx":"6","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/components/shared/Layout/Layout.jsx":"7","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Register/Register.jsx":"8","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/containers/MainContainer.jsx":"9","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Boards/Boards.jsx":"10","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/posts.js":"11","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/boards.js":"12","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/BoardCreate/BoardCreate.jsx":"13","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/BoardDetail/BoardDetail.jsx":"14","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/BoardEdit/BoardEdit.jsx":"15","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/PostDetail/PostDetail.jsx":"16","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/PostCreate/PostCreate.jsx":"17"},{"size":308,"mtime":1617285317256,"results":"18","hashOfConfig":"19"},{"size":1944,"mtime":1617479391989,"results":"20","hashOfConfig":"19"},{"size":950,"mtime":1617285141753,"results":"21","hashOfConfig":"19"},{"size":223,"mtime":1617285175838,"results":"22","hashOfConfig":"19"},{"size":1814,"mtime":1617540926234,"results":"23","hashOfConfig":"19"},{"size":1773,"mtime":1617491896932,"results":"24","hashOfConfig":"19"},{"size":816,"mtime":1617588195081,"results":"25","hashOfConfig":"19"},{"size":1981,"mtime":1617554246622,"results":"26","hashOfConfig":"19"},{"size":3331,"mtime":1617588465544,"results":"27","hashOfConfig":"19"},{"size":1684,"mtime":1617634562930,"results":"28","hashOfConfig":"19"},{"size":604,"mtime":1617476668375,"results":"29","hashOfConfig":"19"},{"size":645,"mtime":1617305460495,"results":"30","hashOfConfig":"19"},{"size":1389,"mtime":1617634915799,"results":"31","hashOfConfig":"19"},{"size":2296,"mtime":1617590382550,"results":"32","hashOfConfig":"19"},{"size":1417,"mtime":1617634885000,"results":"33","hashOfConfig":"19"},{"size":971,"mtime":1617403343564,"results":"34","hashOfConfig":"19"},{"size":1798,"mtime":1617632520659,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1tibdv2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/index.js",[],["72","73"],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/App.js",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/auth.js",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/api-config.js",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Login/Login.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Landing/Landing.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/components/shared/Layout/Layout.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Register/Register.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/containers/MainContainer.jsx",["74"],"import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\n// component imports\nimport Layout from \"../components/shared/Layout/Layout\";\nimport Boards from \"../screens/Boards/Boards\";\nimport BoardCreate from \"../screens/BoardCreate/BoardCreate\";\nimport BoardEdit from \"../screens/BoardEdit/BoardEdit\";\nimport BoardDetail from \"../screens/BoardDetail/BoardDetail\";\nimport PostDetail from \"../screens/PostDetail/PostDetail\";\nimport PostCreate from \"../screens/PostCreate/PostCreate\";\n\n// logo import\nimport logo from \"../assets/PlanterestLogo.png\";\n\n// services imports\n// import { removeToken } from \"../services/auth\";\nimport { addPost, destroyPost } from \"../services/posts\";\n\nimport {\n  getAllBoards,\n  addBoard,\n  putBoard,\n  destroyBoard,\n} from \"../services/boards\";\n\nexport default function MainContainer(props) {\n  const [boards, setBoards] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const history = useHistory();\n  const { currentUser, handleLogout } = props;\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      const boardData = await getAllBoards();\n      setBoards(boardData);\n    };\n    fetchBoards();\n  }, []);\n\n  // BOARD API CALLS\n  const handleBoardCreate = async (boardData) => {\n    const newBoard = await addBoard(boardData);\n    setBoards((prevState) => [...prevState, newBoard]);\n    history.push(\"/boards\");\n  };\n\n  const handleBoardUpdate = async (id, boardData) => {\n    const updatedBoard = await putBoard(id, boardData);\n    setBoards((prevState) =>\n      prevState.map((board) => {\n        return board.id === Number(id) ? updatedBoard : board;\n      })\n    );\n    history.push(\"/boards\");\n  };\n\n  const handleBoardDelete = async (id) => {\n    await destroyBoard(id);\n    setBoards((prevState) => prevState.filter((board) => board.id !== id));\n    history.push(\"/boards\");\n  };\n\n  // POST API CALLS\n  const handlePostCreate = async (boardId, postData) => {\n    const newPost = await addPost(boardId, postData);\n    setBoards((prevState) => [...prevState, newPost]);\n    history.push(`/boards/${boardId}/posts/`);\n  };\n\n  const handlePostDelete = async (boardId, id) => {\n    await destroyPost(boardId, id);\n    setPosts((prevState) => prevState.filter((post) => post.id !== id));\n    history.push(`/boards/${boardId}`);\n  };\n\n  return (\n    <div>\n      <Layout currentUser={currentUser} handleLogout={handleLogout} logo={logo}>\n        <Switch>\n          <Route path=\"/boards/:id/posts/create\">\n            <PostCreate handlePostCreate={handlePostCreate} />\n          </Route>\n          <Route path=\"/boards/:id/posts/:id\">\n            <PostDetail\n              boards={boards}\n              // posts={posts}\n              handlePostDelete={handlePostDelete}\n            />\n          </Route>\n\n          <Route path=\"/boards/create\">\n            <BoardCreate handleBoardCreate={handleBoardCreate} />\n          </Route>\n          <Route path=\"/boards/:id/edit\">\n            <BoardEdit boards={boards} handleBoardUpdate={handleBoardUpdate} />\n          </Route>\n          <Route path=\"/boards/:id\">\n            <BoardDetail handleBoardDelete={handleBoardDelete} />\n          </Route>\n          <Route path=\"/boards\">\n            <Boards boards={boards} />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n","/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/Boards/Boards.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/posts.js",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/services/boards.js",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/BoardCreate/BoardCreate.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/BoardDetail/BoardDetail.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/BoardEdit/BoardEdit.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/PostDetail/PostDetail.jsx",[],"/Users/Hanna/general_assembly/sapphire/unit_4/project-4/planterest/client/src/screens/PostCreate/PostCreate.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":29,"column":10,"nodeType":"81","messageId":"82","endLine":29,"endColumn":15},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]